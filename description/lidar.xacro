<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <joint name="lidar_joint" type="fixed">
        <parent link="chassis"/>
        <child link="lidar"/>
        <origin xyz="0.1 0 0.175" rpy="0 0 0"/>
    </joint>

    <link name="lidar">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>

    <gazebo reference="lidar">
        <material>Gazebo/Red</material>
        <sensor name="lidar" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray> 
                <scan>
                    <horizontal>
                        <samples>360</samples> <!-- This is the number of samples the LiDAR uses for readings. For a 360-degree LiDAR, each degree has one reading -->
                        <min_angle>-3.14</min_angle> <!-- This is the minimum angle in radians the LiDAR can conduct a scan for -->
                        <max_angle>3.14</max_angle> <!-- This is the maximum angle in radians the LiDAR can conduct a scan for -->
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min> <!-- This is the minimum distance the LiDAR can return a measurement for -->
                    <max>12</max> <!-- This is the maximum distance the LiDAR can return a measuremnt for. Beyond this, it will just return "inf" for infinity -->
                </range>            
            </ray>
            <plugin name="lidar_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar</frame_name>
            </plugin>
        </sensor>
    </gazebo>

</robot>
